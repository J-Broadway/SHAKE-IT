{
	Tools = ordered() {
		gui = Merge {
			CtrlWZoom = false,
			NameSet = true,
			Inputs = {
				Quality = Input { Value = 8, },
				ShutterAngle = Input { Value = 200, },
				Merge = Input { Value = 0, },
				PerformDepthMerge = Input { Value = 0, },
				xDev = Input { Value = 0, },
				yDev = Input { Value = 0, },
				Speed = Input { Value = 0, },
				Offset = Input { Value = 2.3, },
			},
			ViewInfo = OperatorInfo { Pos = { 280, 18.2727 } },
			UserControls = ordered() { 
				xDev = { 
					INP_MaxAllowed = 1, 
					INP_Integer = false, 
					INPID_InputControl = "ScrewControl", 
					INP_MaxScale = 1, 
					INP_Default = 0.100000001490116, 
					INP_MinScale = 0, 
					INP_MinAllowed = 0, 
					LINKID_DataType = "Number", 
					LINKS_Name = " X Deviation", }, 
				yDev = { 
					INP_MaxAllowed = 1, 
					INP_Integer = false, 
					INPID_InputControl = "ScrewControl", 
					INP_MaxScale = 1, 
					INP_Default = 0.100000001490116, 
					INP_MinScale = 0, 
					INP_MinAllowed = 0, 
					LINKID_DataType = "Number", 
					LINKS_Name = "Y Deviation", }, 
				Speed = { 
					INP_MaxAllowed = 1, 
					INP_Integer = false, 
					INPID_InputControl = "SliderControl", 
					INP_MaxScale = 1, 
					INP_Default = 0.100000001490116, 
					INP_MinScale = 0, 
					INP_MinAllowed = 0, 
					LINKID_DataType = "Number", 
					LINKS_Name = "Speed", }, 
				Offset = { 
					INP_MaxAllowed = 100, 
					INP_Integer = false, 
					INP_MinAllowed = 0, 
					LINKID_DataType = "Number", 
					INPID_InputControl = "SliderControl", 
					INP_MinScale = 0, 
					INP_MaxScale = 100, 
					LINKS_Name = "Randomness", 
					} 
				}
		},
		Transform2 = Transform {
			Inputs = {
				Quality = Input { Value = 8, },
				ShutterAngle = Input { Value = 292, },
				Center = Input {
					Value = { 0.508214701297419, 0.55047440754628 },
					Expression = ":\n-- Returns value 'y' which turns input 'x' (from 0 to 1) into an exponential curve.\nfunction expCurve(x, slope, a, b)\n    slope 	= slope or 100\n	a		= a or 0\n	b		= b or 1\n    -- y 		= (slope^x -1)/(slope-1)\n	y		= a + (b-a)*((slope^x-1)/(slope-1))\n    return y\nend\n\n-- Shake Function\nfunction shake(x1, x2, phase, speed, func)\n	amplitude 	= ((x1 - x2) / 2)\n	-- period		= (300 * (2 / 300)^speed)\n	period		= expCurve(speed, .01, 100, 2.1)\n	midpoint	= ((x2 + x1) / 2)\n    phase       = phase or 1\n	\n	if func == \"sin\" then\n		shakeit	= amplitude * sin(2 * pi * time / period + pi/phase) + midpoint\n	elseif func == \"cos\" then\n		shakeit	= amplitude * cos(2 * pi * time / period) + midpoint\n	end\n	return shakeit\nend\n\nsinPhase 	= shake(1, 1 + gui.Offset/50, 1, 0.1, \"sin\")\n\nx1, y1 		= expCurve(gui.xDev), expCurve(gui.yDev)\nx2, y2 		= expCurve(gui.xDev), expCurve(gui.yDev)\n\nx1, y1 		= 0.5-x1, 0.5-y1\nx2, y2 		= 0.5+x2, 0.5+y2\n\nreturn Point(shake(x2, x1, sinPhase, gui.Speed, \"sin\"),\n			 shake(y1, y2, sinPhase, gui.Speed, \"cos\"))\n",
				},
			},
			ViewInfo = OperatorInfo { Pos = { 282, 49.1818 } },
		}
	}
}